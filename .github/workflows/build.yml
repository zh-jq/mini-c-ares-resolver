name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [x86_64, x86_64-beta, x86_64-nightly, macos]
        include:
          - build: x86_64
            os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - build: x86_64-beta
            os: ubuntu-latest
            rust: beta
            target: x86_64-unknown-linux-gnu
          - build: x86_64-nightly
            os: ubuntu-latest
            rust: nightly
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Rust (rustup)
        run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
        shell: bash
      - run: rustup target add ${{ matrix.target }}
      - run: brew install c-ares
        if: matrix.build == 'macos'
        name: Install c-ares
      - run: sudo apt-get install libc-ares-dev
        if: matrix.os == 'ubuntu-latest'
        name: Install c-ares
      - run: cargo fmt -- --check
        if: matrix.build == 'x86_64'
        name: Check formatting
      - run: cargo build
        name: Build
      - run: cargo test
        name: Run tests
